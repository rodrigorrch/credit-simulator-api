continue
simulation.monthly_payment.to_decimal
simulation.monthly_payment
simulation
continue
simulation.monthy_payment
simulation.installments
simulation.amount
simulation
simulation.monthly_payment
simulation.monthly_payment.to_decimal
simulation.currency
simulation.interest_rate.type
simulation.interest_rate.value
simulation.installments
simulation.birth_date
simulation.amount.to_decimal
simulation
continue
@loan_simulation_repository.create(simulation)
continue
@loan_simulation_repository.create(simulation)
continue
total_amount
continue
monthly_payment
continue
Domain::ValueObjects::InterestRate::Fixed.new(value: rate)
continue
Domain::ValueObjects::InterestRate::Fixed.new(value: rate)
continue
rate[:spread]
rate[:spread].present?
continue
attributes[:spread]
attributes[:interest_rate]
build_interest_rate(attributes[:interest_rate], attributes[:spread])
continue
ValueObjects::InterestRate.new(attributes[:interest_rate])
continue
@amount = ValueObjects::Money.new(attributes[:amount])
continue
amount.currency
@amount = ValueObjects::Money.new(attributes[:amount])
amount
amount.currency
monthly_payment
attributes[:currency]
attributes[:interest_rate]
attributes
continue
params[:amount]
params[:installments]
params[:birth_date]
params
continue
Domain::Services::InterestRateCalculator.new.calculate_for_age(params[:birth_date])
continue
interest_rate_calculator.calculate_for_age(params[:birth_date])
params[:birth_date]
interest_rate_calculator
continue
simulation = create_loan_simulation.execute(simulation_params)
continue
